#include<stdio.h>
#include "GraphsAdjacencyListDirectedGraph.c" 

void main() {
	int x, op;
	int N,E,s,d,i,j;
	GNODE p,q;
	printf("Enter the number of vertices : ");
	scanf("%d",&N);
	printf("Enter the number of edges : ");
	scanf("%d",&E);
	for(i=1;i<=E;i++) {
		printf("Enter source : ");
		scanf("%d",&s);
		printf("Enter destination : ");
		scanf("%d",&d);
		q=(GNODE)malloc(sizeof(struct node));
		q->vertex=d;
		q->next=NULL;
		if(graph[s]==NULL)
			graph[s]=q;
		else {
			p=graph[s];
			while(p->next!=NULL)
				p=p->next;
			p->next=q;
		}
	}
	while(1) {
		printf("1.Insert vertex 2.Insert edge 3.Delete vertex 4.Delete edge 5.Print adjacency list 6.Exit\n");
		printf("Enter your option : ");
		scanf("%d", &op);
		switch(op) {
			case 1:	
					insertVertex(&N);
					break;
			case 2:
					insertEdge(&N);
					break;
			case 3: 
					deleteVertex(&N);
					break;
			case 4:
					deleteEdge(&N);
					break;
			case 5:
					print(&N);
					break;
			case 6:
					exit(0);
		}
	}
}

#include<stdio.h>
	GNODE prev = NULL;
	while(curr != NULL){
		if(curr->vertex == dest){
			if(prev==NULL){
				graph[src] = curr->next;
			}
			else{
				prev -> next = curr->next;
			}
			free(curr);
			//printf("Edge from %d to %d deleted.\n",src,dest);
			printf("After deleting edge the adjacency list is : \n");
			print(n);
			return;
		}
		prev = curr;
		curr = curr -> next;
	}
	printf("Edge not found.\n");
}
void print(int *n){
	int i;
	for(i=1; i<= *n; i++){
		if(graph[i]!=NULL){
			printf("%d=>",i);
			GNODE temp = graph[i];while(temp!=NULL){
				printf("%d\t",temp->vertex);
				temp = temp->next;
			}
			printf("\n");
		}
	}
}
